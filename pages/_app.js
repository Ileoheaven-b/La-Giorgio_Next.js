import Head from "next/head";
import dynamic from "next/dynamic.js";
import { useState, useEffect, useRef } from "react";
import Link from "next/link";
import "../styles/global.css";
import styles from "../styles/navBar.module.css";

const LoadCart = dynamic(() => import("../components/cartPopup.js"));

export default function App({ Component, pageProps }) {
  const [cityIsKnown, setCityPrompt] = useState(1); // To add: Local Storage
  const [toggleCart, setToggleCart] = useState(null);
  const cartToggleHandler = useRef(false);

  useEffect(() => {
    if (typeof window !== "undefined") {
      if (!sessionStorage.getItem("cart")) {
        sessionStorage.setItem("cart", "[]");
      }
    }
  }, []);

  const CityPrompt = () => {
    if (cityIsKnown) {
      return (
        <>
          <div className={styles.cityPrompt}>
            Let us tell you if we have a restaurant in your region: "form"
          </div>
        </>
      );
    }
  };

  return (
    <>
      <Head>
        <title>La Giorgio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.flexSpacer}>
        <CityPrompt />
        <div className={styles.navBarContainer}>
          <div className={styles.navBar}>
            <Link className="link BTN homeBTN" href="/">
              La Giorgio
            </Link>
            <div className={styles.navContainer}>
              <Link className="link BTN menuBTN" href="/menu">
                Menu
              </Link>
              <Link className="link BTN contactBTN" href="/contact">
                Contact
              </Link>
              <div
                className="BTN cartBTN"
                onMouseEnter={() => {
                  setToggleCart(true);
                }}
                onMouseLeave={() => {
                  cartToggleHandler.current = false;
                  setTimeout(() => {
                    cartToggleHandler.current === false
                      ? setToggleCart(false)
                      : null;
                  }, 200);
                }}
              >
                Cart
                {toggleCart ? (
                  <div
                    onMouseEnter={() => (cartToggleHandler.current = true)}
                    onMouseLeave={() =>
                      setTimeout(() => {
                        cartToggleHandler.current === false
                          ? setToggleCart(false)
                          : null;
                      }, 200)
                    }
                    className={styles.cartPopup}
                  >
                    <LoadCart />
                  </div>
                ) : null}
              </div>
            </div>
          </div>
        </div>
        <Component {...pageProps} />
      </div>
      <div className={styles.footer}>
        Average footer text and copyright thingy...
      </div>
    </>
  );
}
